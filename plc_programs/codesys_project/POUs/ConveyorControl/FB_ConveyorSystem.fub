FUNCTION_BLOCK FB_ConveyorSystem
VAR_INPUT
    System_Enable   : BOOL;         // System enable
    Manual_Mode     : BOOL;         // Manual operation mode
    Reset_All       : BOOL;         // Reset all conveyors
END_VAR

VAR_OUTPUT
    All_Ready       : BOOL;         // All conveyors ready
    Any_Running     : BOOL;         // Any conveyor running
    Any_Fault       : BOOL;         // Any conveyor fault
    System_OK       : BOOL;         // System OK status
END_VAR

VAR
    (* Conveyor function blocks *)
    FB_Conveyor1    : FB_ConveyorControl;
    FB_Conveyor2    : FB_ConveyorControl;
    FB_Conveyor3    : FB_ConveyorControl;
    FB_Conveyor4    : FB_ConveyorControl;
    
    (* Conveyor data structures *)
    Conveyor1_Data  : DUT_ConveyorData;
    Conveyor2_Data  : DUT_ConveyorData;
    Conveyor3_Data  : DUT_ConveyorData;
    Conveyor4_Data  : DUT_ConveyorData;
    
    (* Internal variables *)
    i               : INT;          // Loop counter
END_VAR

(* Initialize conveyor data structures *)
Conveyor1_Data.Entry_Sensor := GVL_IO.PE_Sensor_Conv1_Entry;
Conveyor1_Data.Exit_Sensor := GVL_IO.PE_Sensor_Conv1_Exit;
Conveyor1_Data.Auto_Mode := NOT Manual_Mode;

Conveyor2_Data.Entry_Sensor := GVL_IO.PE_Sensor_Conv2_Entry;
Conveyor2_Data.Exit_Sensor := GVL_IO.PE_Sensor_Conv2_Exit;
Conveyor2_Data.Auto_Mode := NOT Manual_Mode;

Conveyor3_Data.Entry_Sensor := GVL_IO.PE_Sensor_Conv3_Entry;
Conveyor3_Data.Exit_Sensor := GVL_IO.PE_Sensor_Conv3_Exit;
Conveyor3_Data.Auto_Mode := NOT Manual_Mode;

Conveyor4_Data.Entry_Sensor := GVL_IO.PE_Sensor_Conv4_Entry;
Conveyor4_Data.Exit_Sensor := GVL_IO.PE_Sensor_Conv4_Exit;
Conveyor4_Data.Auto_Mode := NOT Manual_Mode;

(* Call individual conveyor function blocks *)
FB_Conveyor1(
    Enable := System_Enable,
    Run_Command := GVL_Internal.Conveyor1_Run_Request,
    Speed_Setpoint := 1000,
    Auto_Mode := NOT Manual_Mode,
    Reset_Command := Reset_All,
    Motor_Output => GVL_IO.Conveyor1_Motor,
    Conveyor_Data := Conveyor1_Data
);

FB_Conveyor2(
    Enable := System_Enable,
    Run_Command := GVL_Internal.Conveyor2_Run_Request,
    Speed_Setpoint := 1000,
    Auto_Mode := NOT Manual_Mode,
    Reset_Command := Reset_All,
    Motor_Output => GVL_IO.Conveyor2_Motor,
    Conveyor_Data := Conveyor2_Data
);

FB_Conveyor3(
    Enable := System_Enable,
    Run_Command := GVL_Internal.Conveyor3_Run_Request,
    Speed_Setpoint := 1000,
    Auto_Mode := NOT Manual_Mode,
    Reset_Command := Reset_All,
    Motor_Output => GVL_IO.Conveyor3_Motor,
    Conveyor_Data := Conveyor3_Data
);

FB_Conveyor4(
    Enable := System_Enable,
    Run_Command := GVL_Internal.Conveyor4_Run_Request,
    Speed_Setpoint := 1000,
    Auto_Mode := NOT Manual_Mode,
    Reset_Command := Reset_All,
    Motor_Output => GVL_IO.Conveyor4_Motor,
    Conveyor_Data := Conveyor4_Data
);

(* Update MODBUS status registers *)
GVL_MODBUS.Conveyor1_Status := TO_INT(Conveyor1_Data.Status);
GVL_MODBUS.Conveyor2_Status := TO_INT(Conveyor2_Data.Status);
GVL_MODBUS.Conveyor3_Status := TO_INT(Conveyor3_Data.Status);
GVL_MODBUS.Conveyor4_Status := TO_INT(Conveyor4_Data.Status);

GVL_MODBUS.Conveyor1_Speed := Conveyor1_Data.Speed_Setpoint;
GVL_MODBUS.Conveyor2_Speed := Conveyor2_Data.Speed_Setpoint;
GVL_MODBUS.Conveyor3_Speed := Conveyor3_Data.Speed_Setpoint;
GVL_MODBUS.Conveyor4_Speed := Conveyor4_Data.Speed_Setpoint;

(* Calculate system status *)
All_Ready := FB_Conveyor1.Ready AND FB_Conveyor2.Ready AND FB_Conveyor3.Ready AND FB_Conveyor4.Ready;
Any_Running := FB_Conveyor1.Running OR FB_Conveyor2.Running OR FB_Conveyor3.Running OR FB_Conveyor4.Running;
Any_Fault := FB_Conveyor1.Fault OR FB_Conveyor2.Fault OR FB_Conveyor3.Fault OR FB_Conveyor4.Fault;
System_OK := All_Ready AND NOT Any_Fault;